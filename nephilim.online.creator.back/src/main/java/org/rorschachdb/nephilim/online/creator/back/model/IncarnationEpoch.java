package org.rorschachdb.nephilim.online.creator.back.model;

import lombok.*;
import org.rorschachdb.nephilim.online.creator.back.model.enums.EraEnum;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.util.List;

/**
 * Time and places of a given incarnation with related details.
 */
@Entity
@Table(name = "T_INCARNATION_EPOCH")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class IncarnationEpoch {

    /**
     * Technical identifier (autogenerated)
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;

    /**
     * IncarnationEpoch's designation - conceptual key
     */
    @NotBlank
    @Column(nullable = false, unique = true, updatable = true)
    private String name;

    /**
     * IncarnationEpoch's summary : context, events, people...
     */
    @Column(updatable = true, length = 5000)
    private String description;

    /**
     * Price in incarnation points for a character to acquire an IncarnationEpoch
     * TODO: add validation (from 0 to 2)
     */
    @Max(3)
    @PositiveOrZero
    @Column(nullable = false, updatable = true)
    private int cost;

    /**
     * Group of incarnation epochs which the IncarnationEpoch is part of
     */
    @Enumerated(EnumType.STRING)
    @Column(nullable = false, updatable = true)
    private EraEnum era;

    /**
     * List of geographical loci where the IncarnationEpoch takes place
     */
    @NotEmpty
    @Singular
    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "ET_EPOCH_LOCATION", joinColumns = @JoinColumn(name = "id"))
    private List<String> locations;

}
