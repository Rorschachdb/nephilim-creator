
/*
 * nephilim.online.creator.back
 *
 * Copyright (c) 2022 by rorshach-corp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package org.rorschachdb.nephilim.online.creator.back.model.entities;

import lombok.*;
import org.rorschachdb.nephilim.online.creator.back.model.embedded.MagicEffect;
import org.rorschachdb.nephilim.online.creator.back.model.embedded.TimePeriod;
import org.rorschachdb.nephilim.online.creator.back.model.enums.EraEnum;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Time and places of a given incarnation with related details.
 */
@Entity
@Table(name = "T_INCARNATION_EPOCH")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class IncarnationEpoch implements Serializable {

    /**
     * Technical identifier (autogenerated)
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    /**
     * IncarnationEpoch's designation - conceptual key
     */
    @NotBlank
    @Column(nullable = false, unique = true)
    private String name;

    /**
     * IncarnationEpoch's summary : context, events, people...
     */
    @Column(length = 5000)
    private String description;

    /**
     * Price in incarnation points for a character to acquire an IncarnationEpoch
     */
    @Max(2)
    @PositiveOrZero
    @Column(nullable = false)
    private Integer cost;

    /**
     * Group of incarnation epochs which the IncarnationEpoch is part of
     */
    @NotNull
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private EraEnum era;

    /**
     * List of geographical loci where the IncarnationEpoch takes place
     */
    @NotEmpty
    @Singular
    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "ET_EPOCH_LOCATION", joinColumns = @JoinColumn(name = "INCARNATION_EPOCH_ID"))
    @Column(name = "location")
    private Set<String> locations = new HashSet<>();

    @NotEmpty
    @Singular
    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "ET_MAGIC_EFFECTS", joinColumns = @JoinColumn(name = "INCARNATION_EPOCH_ID"))
    private Set<MagicEffect> magicEffects = new HashSet<>();

    @Embedded
    private TimePeriod timePeriod;

    @OneToMany(
            mappedBy = "incarnationEpoch",
            cascade = CascadeType.ALL,
            orphanRemoval = true
    )
    private Set<IncarnationEpochDegreeValue> posts = new HashSet<>();

}
